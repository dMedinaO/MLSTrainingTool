{"models": [{"params": [{"n_neighbors": "1"}, {"algorithm": "auto"}, {"metric": "minkowski"}, {"weights": "uniform"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "1"}, {"algorithm": "brute"}, {"metric": "minkowski"}, {"weights": "uniform"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "3"}, {"algorithm": "auto"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "7"}, {"algorithm": "kd_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "2"}, {"algorithm": "auto"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "2"}, {"algorithm": "brute"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "4"}, {"algorithm": "auto"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "2"}, {"algorithm": "kd_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "8"}, {"algorithm": "kd_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "9"}, {"algorithm": "ball_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "4"}, {"algorithm": "ball_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "7"}, {"algorithm": "brute"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "6"}, {"algorithm": "auto"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "5"}, {"algorithm": "ball_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "4"}, {"algorithm": "kd_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "10"}, {"algorithm": "ball_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "9"}, {"algorithm": "auto"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "9"}, {"algorithm": "brute"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "9"}, {"algorithm": "auto"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "10"}, {"algorithm": "brute"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "7"}, {"algorithm": "ball_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_estimators": "200"}, {"criterion": "mae"}, {"min_samples_split": "2"}, {"min_samples_leaf": "1"}, {"bootstrap": "False"}], "algorithm": "RandomForestRegressor"}, {"params": [{"n_estimators": "500"}, {"criterion": "mae"}, {"min_samples_split": "2"}, {"min_samples_leaf": "1"}, {"bootstrap": "False"}], "algorithm": "RandomForestRegressor"}, {"params": [{"n_neighbors": "3"}, {"algorithm": "brute"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "9"}, {"algorithm": "kd_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "5"}, {"algorithm": "kd_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "1"}, {"algorithm": "ball_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "3"}, {"algorithm": "auto"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "4"}, {"algorithm": "brute"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"criterion": "mse"}, {"splitter": "random"}], "algorithm": "DecisionTree"}, {"params": [{"n_neighbors": "1"}, {"algorithm": "auto"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "4"}, {"algorithm": "brute"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "2"}, {"algorithm": "kd_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "6"}, {"algorithm": "ball_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "1"}, {"algorithm": "brute"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "6"}, {"algorithm": "ball_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "1"}, {"algorithm": "auto"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "6"}, {"algorithm": "brute"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_estimators": "2000"}, {"criterion": "mae"}, {"min_samples_split": "2"}, {"min_samples_leaf": "1"}, {"bootstrap": "False"}], "algorithm": "RandomForestRegressor"}, {"params": [{"n_neighbors": "10"}, {"algorithm": "ball_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "10"}, {"algorithm": "kd_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "6"}, {"algorithm": "brute"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "10"}, {"algorithm": "brute"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_estimators": "50"}, {"criterion": "mae"}, {"min_samples_split": "2"}, {"min_samples_leaf": "1"}, {"bootstrap": "False"}], "algorithm": "RandomForestRegressor"}, {"params": [{"n_neighbors": "5"}, {"algorithm": "kd_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"criterion": "mae"}, {"splitter": "best"}], "algorithm": "DecisionTree"}, {"params": [{"n_estimators": "100"}, {"criterion": "mae"}, {"min_samples_split": "2"}, {"min_samples_leaf": "1"}, {"bootstrap": "False"}], "algorithm": "RandomForestRegressor"}, {"params": [{"n_neighbors": "7"}, {"algorithm": "ball_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "5"}, {"algorithm": "auto"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "1"}, {"algorithm": "ball_tree"}, {"metric": "minkowski"}, {"weights": "uniform"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "10"}, {"algorithm": "auto"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "1"}, {"algorithm": "kd_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "8"}, {"algorithm": "ball_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "2"}, {"algorithm": "ball_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "1"}, {"algorithm": "kd_tree"}, {"metric": "minkowski"}, {"weights": "uniform"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "5"}, {"algorithm": "brute"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "6"}, {"algorithm": "auto"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "1"}, {"algorithm": "kd_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "9"}, {"algorithm": "ball_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "5"}, {"algorithm": "ball_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "2"}, {"algorithm": "brute"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "6"}, {"algorithm": "kd_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "1"}, {"algorithm": "brute"}, {"metric": "euclidean"}, {"weights": "uniform"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "4"}, {"algorithm": "auto"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"criterion": "mae"}, {"splitter": "random"}], "algorithm": "DecisionTree"}, {"params": [{"n_neighbors": "8"}, {"algorithm": "auto"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "9"}, {"algorithm": "kd_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "8"}, {"algorithm": "brute"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "3"}, {"algorithm": "kd_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "8"}, {"algorithm": "brute"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "6"}, {"algorithm": "kd_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "4"}, {"algorithm": "ball_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "3"}, {"algorithm": "brute"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "1"}, {"algorithm": "ball_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "8"}, {"algorithm": "kd_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "3"}, {"algorithm": "ball_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "3"}, {"algorithm": "kd_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "4"}, {"algorithm": "kd_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_estimators": "1500"}, {"criterion": "mae"}, {"min_samples_split": "2"}, {"min_samples_leaf": "1"}, {"bootstrap": "False"}], "algorithm": "RandomForestRegressor"}, {"params": [{"n_neighbors": "1"}, {"algorithm": "brute"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "5"}, {"algorithm": "auto"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "1"}, {"algorithm": "kd_tree"}, {"metric": "euclidean"}, {"weights": "uniform"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "1"}, {"algorithm": "ball_tree"}, {"metric": "euclidean"}, {"weights": "uniform"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "5"}, {"algorithm": "brute"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "3"}, {"algorithm": "ball_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "2"}, {"algorithm": "auto"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "7"}, {"algorithm": "kd_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "8"}, {"algorithm": "auto"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_estimators": "1000"}, {"criterion": "mae"}, {"min_samples_split": "2"}, {"min_samples_leaf": "1"}, {"bootstrap": "False"}], "algorithm": "RandomForestRegressor"}, {"params": [{"n_neighbors": "7"}, {"algorithm": "auto"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "10"}, {"algorithm": "kd_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_estimators": "10"}, {"criterion": "mae"}, {"min_samples_split": "2"}, {"min_samples_leaf": "1"}, {"bootstrap": "False"}], "algorithm": "RandomForestRegressor"}, {"params": [{"n_neighbors": "9"}, {"algorithm": "brute"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "7"}, {"algorithm": "brute"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "7"}, {"algorithm": "auto"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "10"}, {"algorithm": "auto"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "2"}, {"algorithm": "ball_tree"}, {"metric": "euclidean"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "8"}, {"algorithm": "ball_tree"}, {"metric": "minkowski"}, {"weights": "distance"}], "algorithm": "KNeighborsRegressor"}, {"params": [{"n_neighbors": "1"}, {"algorithm": "auto"}, {"metric": "euclidean"}, {"weights": "uniform"}], "algorithm": "KNeighborsRegressor"}]}